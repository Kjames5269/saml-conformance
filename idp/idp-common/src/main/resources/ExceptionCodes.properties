############################
#
# PROFILES
#
############################

SAMLProfiles.4.1.4.2_a=If the <Response> message is signed or if an enclosed assertion is encrypted, then the \
  <Issuer> element MUST be present.

SAMLProfiles.4.1.4.2_b=If present [the Issuer] MUST contain the unique identifier of the issuing identity provider.

SAMLProfiles.4.1.4.2_c=The Format attribute MUST be omitted or have a value of urn:oasis:names:tc:SAML:2.0:nameid-format:entity.

SAMLProfiles.4.1.4.2_d=[A Response] MUST contain at least one <Assertion>.

SAMLProfiles.4.1.4.2_e=Each assertion's <Issuer> element MUST contain the unique identifier of the [E26]responding identity provider

# todo SAMLProfiles.4.1.4.2f= If multiple assertions are included, then each assertion's <Subject> element MUST refer to the same principal.

SAMLProfiles.4.1.4.2_g=Any assertion issued for consumption using this profile MUST contain a <Subject> element.

SAMLProfiles.4.1.4.2_h=Any assertion issued for consumption using this profile MUST contain a <Subject> element with \
  at least one <SubjectConfirmation> element containing a Method of urn:oasis:names:tc:SAML:2.0:cm:bearer.

SAMLProfiles.4.1.4.2_i=At lease one bearer <SubjectConfirmation> element MUST contain a <SubjectConfirmationData> \
  element that itself MUST contain a Recipient attribute containing the service provider's assertion \
  consumer service URL and a NotOnOrAfter attribute that limits the window during which the assertion \
  can be [E52]confirmed by the relying party. It MAY also contain an Address attribute limiting the \
  client address from which the assertion can be delivered. It MUST NOT contain a NotBefore attribute. \
  If the containing message is in response to an <AuthnRequest>, then the InResponseTo attribute MUST \
  match the request's ID.

SAMLProfiles.4.1.4.2_j=The set of one or more bearer assertions MUST contain at least one <AuthnStatement> that \
reflects the authentication of the principal to the identity provider.

SAMLProfiles.4.1.4.2_k=If the identity provider supports the Single Logout profile, defined in Section 4.4, any \
  authentication statements MUST include a SessionIndex attribute to enable per-session logout \
  requests by the service provider.

SAMLProfiles.4.1.4.2_l=Each bearer assertion MUST contain an <AudienceRestriction> including \
  the service provider's unique identifier as an <Audience>.

SAMLProfiles.4.1.4.5=If the HTTP POST binding is used to deliver the <Response>, [E26]each assertion MUST be \
  protected by a digital signature. This can be accomplished by signing each individual element or by <Assertion> \
  signing the <Response> element.

############################
#
# CORE
#
############################

SAMLCore.2.2.4_a=The Type attribute [for an EncryptedData] SHOULD be present and, if present, MUST contain a value of \
  http://www.w3.org/2001/04/xmlenc#Element.

# todo SAMLCore.2.2.4_b=The encrypted content MUST contain an element that has a type of NameIDType or AssertionType, or a type that is derived from BaseIDAbstractType, NameIDType, or AssertionType.

# todo SAMLCore.2.2.4_c=Encrypted identifiers are intended as a privacy protection mechanism when the plain-text value passes through an intermediary. As such, the ciphertext MUST be unique to any given encryption operation. For more on such issues, see [XMLEnc] Section 6.3.

SAMLCore.2.2.3_a=An xsi:type attribute MUST be used to indicate the actual statement type.

SAMLCore.2.2.3_b=An assertion with no statements MUST contain a <Subject> element. Such an assertion identifies a \
  principal in a manner which can be referenced or confirmed using SAML methods, but asserts no further information \
  associated with that principal.

SAMLCore.2.3.4_a=The Type attribute [for an EncryptedData] SHOULD be present and, if present, MUST contain a value of \
  http://www.w3.org/2001/04/xmlenc#Element.

# todo SAMLCore.2.3.4_b=The encrypted content MUST contain an element that has a type of or derived from AssertionType.

# todo SAMLCore.2.4.1.2_a=SAML extensions MUST NOT add local (non-namespace-qualified) XML attributes or XML attributes qualified by a SAML-defined namespace to the SubjectConfirmationDataType complex type or a derivation of it; such attributes are reserved for future maintenance and enhancement of SAML itself.

SAMLCore.2.5.1_a=An xsi:type attribute MUST be used [in the Condition element] to indicate the actual condition type.

SAMLCore.2.5.1_b=There MUST be at most one instance of [the OneTimeUse] element [under Conditions].

SAMLCore.2.5.1_c=There MUST be at most one instance of [the ProxyRestriction] element [under Conditions].

SAMLCore.2.5.1.2=If both attributes are present, the value for NotBefore MUST be less than (earlier than) the value for NotOnOrAfter.

SAMLCore.2.5.1.5_a=A SAML authority MUST NOT include more than one <OneTimeUse> element within a <Conditions> element of an assertion.

SAMLCore.2.5.1.6_a=A SAML authority MUST NOT include more than one <ProxyRestriction> element within a <Conditions> element of an assertion.

SAMLCore.2.7.2_a=Assertions containing <AuthnStatement> elements MUST contain a <Subject> element.

SAMLCore.2.7.3_a=Assertions containing <AttributeStatement> elements MUST contain a <Subject> element.

SAMLCore.2.7.3.1_a=Within an <AttributeStatement>, if the SAML attribute exists but has no values, then the <AttributeValue> element MUST be omitted.

SAMLCore.2.7.3.2_a=The Type attribute [for an EncryptedData] SHOULD be present and, if present, MUST contain a value of http://www.w3.org/2001/04/xmlenc#Element.

# todo SAMLCore.2.7.3.2_b=The encrypted content MUST contain an element that has a type of or derived from AttributeType.

SAMLCore.2.7.4_a=Assertions containing <AuthzDecisionStatement> elements MUST contain a <Subject> element.

SAMLCore.3.2.2_a=If the response is not generated in response to a request, or if the ID attribute value of a request cannot be determined (for example, the request \
  is malformed), then this attribute MUST NOT be present. Otherwise, it MUST be present and its value MUST match the value of the corresponding request's ID attribute.

SAMLCore.3.2.2.2_a=The value of the topmost <StatusCode> element MUST be from the top-level list provided in this section.

SAMLCore.3.2.2.2_b=The permissible top-level <StatusCode> values are as follows: \n \
    - urn:oasis:names:tc:SAML:2.0:status:Success \n \
    - urn:oasis:names:tc:SAML:2.0:status:Requester \n \
    - urn:oasis:names:tc:SAML:2.0:status:Responder \n \
    - urn:oasis:names:tc:SAML:2.0:status:VersionMismatch

SAMLCore.3.3.2.2_a=If the SessionIndex attribute is present in the query, at least one <AuthnStatement> element in the set of returned assertions MUST contain a \
  SessionIndex attribute that matches the SessionIndex attribute in the query.

SAMLCore.3.3.2.2_b=If the <RequestedAuthnContext> element is present in the query, at least one <AuthnStatement> element in the set of returned assertions MUST \
  contain an <AuthnContext> element that satisfies the element in the query (see Section 3.3.2.2.1).

SAMLCore.3.3.2.3_a=A single query MUST NOT contain two <saml:Attribute> elements with the same Name and NameFormat values (that is, a given attribute MUST be \
  named only once in a query).

SAMLCore.3.4.1.1_a=The special Format value urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted indicates that the resulting assertion(s) MUST contain \
  <EncryptedID> elements instead of plaintext.

SAMLCore.5.4.1_a=SAML assertions and protocols MUST use enveloped signatures when signing assertions and protocol messages.

SAMLCore.5.4.2_a=SAML assertions and protocol messages MUST supply a value for the ID attribute on the root element of the assertion or protocol message being signed.

SAMLCore.5.4.2_b=Signatures MUST contain a single <ds:Reference> containing a same-document reference to the ID attribute value of the root element of the assertion or protocol message being signed. \
  For example, if the ID attribute value is "foo", then the URI attribute in the <ds:Reference> element MUST be "#foo".

SAMLCore.5.4.2_b1=Signatures MUST contain a single <ds:Reference>.

############################
#
# BINDINGS
#
############################

# todo SAMLBindings.3.1.1_a=if a SAML request message is accompanied by RelayState data, then ... it MUST place the exact \
# RelayState data it received with the request into the corresponding RelayState parameter in the response.

# todo SAMLBindings.3.1.1_b=Implementations MUST carefully sanitize the URL schemes they permit (for example, disallowing \
# anything but "http" or "https"), and should disallow unencoded characters that may be used in mounting such attacks.

SAMLBindings.3.4.3_a=If a SAML request message is accompanied by RelayState data, then the SAML responder MUST return \
its SAML protocol response using a binding that also supports a RelayState mechanism, and it MUST place the exact data it \
received with the request into the corresponding RelayState parameter in the response.

SAMLBindings.3.4.4.1_a=SAML message could not be decoded. SAML messages should be encoded using DEFLATE Encoding.

# todo Would need to change the pluggable portion to verify all of these below
# SAMLBindings.3.4.4.1_b=The base-64 encoded data is then URL-encoded, and added to the URL as a query string \
# parameter which MUST be named SAMLRequest (if the message is a SAML request) or SAMLResponse (if the message is a SAML response).
#

SAMLBindings.3.4.4.1_c=If RelayState data is to accompany the SAML protocol message, it MUST be URL-encoded and \
placed in an additional query string parameter named RelayState

SAMLBindings.3.4.4.1_c1=If RelayState data is to accompany the SAML protocol message, it MUST be URL-encoded

# todo Verify this
# SAMLBindings.3.4.4.1_c2=If RelayState data is to accompany the SAML protocol message, it MUST be... \
# placed in an additional query string parameter named RelayState.
#
# SAMLBindings.3.4.4.1_d=To construct the signature, a string consisting of the concatenation of the RelayState \
# (if present), SigAlg, and SAMLRequest (or SAMLResponse ) query string parameters (each one URL- encoded) is \
# constructed in one of the following ways (ordered as below):
# SAMLRequest=value&RelayState=value&SigAlg=value
# SAMLResponse=value&RelayState=value&SigAlg=value

# SAMLBindings.3.4.4.1_e=The signature value MUST be encoded using the base64 encoding (see RFC 2045 [RFC2045]) \
# with any whitespace removed, and included as a query string parameter named Signature. Note that some characters \
# in the base64-encoded signature value may themselves require URL-encoding before being added.
#
# SAMLBindings.3.4.4.1_f=The following signature algorithms (see [XMLSig]) and their URI representations MUST be \
# supported with this encoding mechanism:
# • DSAwithSHA1 – http://www.w3.org/2000/09/xmldsig#dsa-sha1
# • RSAwithSHA1 – http://www.w3.org/2000/09/xmldsig#rsa-sha1

SAMLBindings.3.5.4=SAML message could not be decoded. SAML messages should be base-64 encoded.